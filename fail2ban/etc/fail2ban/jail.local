[DEFAULT]
# ===============================
# Global defaults for all jails
# ===============================

# Add trusted IPs here (admin IPs, internal ranges, etc.) so you don’t get locked out.
ignoreip = 127.0.0.1/8 ::1 88.88.88.88

# Banaction defines how Fail2ban applies bans.
# ipset-iptables is faster and scales better on busy servers than plain iptables.
# Uncomment to make it default globally:
#banaction = ipset-iptables
#banaction_allports = ipset-iptables


# ===============================
# Demo / Example Jails
# ===============================

[apache-signup-abuse]
enabled  = true
port     = http,https
filter   = apache-signup-abuse
logpath  = /var/log/apache2/*access.log
maxretry = 5          # Ban after 5 failed attempts
findtime = 60         # within 1 minute
bantime  = 86400      # 24h ban
# Example: catching bots abusing signup forms

[scraper-anthropic-abuse]
enabled   = true
port      = http,https
filter    = scraper-anthropic-abuse
logpath   = /var/log/apache2/*access.log
            /var/log/nginx/*access.log
maxretry  = 3         # Ban after 3 retries
findtime  = 600       # within 10 minutes
bantime   = 3600      # 1h ban
# Example: ban scraper User-Agent if it causes 400/500 errors

[scraper-anthropic-any]
enabled   = false
port      = http,https
filter    = scraper-anthropic-any
logpath   = /var/log/apache2/access.log
            /var/log/nginx/access.log
maxretry  = 1         # Ban on first sighting
findtime  = 600
bantime   = 3600
# Example: ban specific User-Agent regardless of behavior
# Use with care: may catch legitimate clients if filter is too broad.

[scraper-anthropic-spoof]
enabled   = false
filter    = scraper-anthropic-spoof
logpath   = /var/log/nginx/*access.log
            /var/log/apache2/*access.log
maxretry  = 1
findtime  = 10m
bantime   = 1h
ignorecommand = /usr/local/bin/anthropic-lookup.sh <ip>
banaction = ipset-iptables

[web-detector]
enabled   = false
filter    = web-detector
logpath   = /var/log/web_suspects.jsonl
# backend   = polling     # Uncomment if log not updating via systemd/journald
bantime   = 5h           # Ban for 5 hours
findtime  = 15m          # Look at 15 min windows
maxretry  = 2            # If IP flagged as anomaly twice → ban
action    = ipset-iptables
# Example: consuming logs from a ML detector writing JSONL output
# Needs a matching filter in /etc/fail2ban/filter.d/web-detector.conf


# ===============================
# Debian/Ubuntu LAMP Defaults
# ===============================
# These are common prebuilt jails for typical services.
# Most stay disabled unless explicitly turned on.
# ===============================

[sshd]
enabled = true
# Protects SSH login attempts.
# Logs: /var/log/auth.log
# Blocks brute force password guessing and repeated failed logins.

[apache-auth]
enabled = true
# Protects Apache HTTP Basic/Digest Auth.
# Logs: /var/log/apache2/error.log
# Bans IPs after repeated failed logins to protected directories.

[apache-badbots]
enabled = true
# Blocks known bad/crawler User-Agents (from badbots filter).
# Logs: /var/log/apache2/access.log
# Catches aggressive scrapers, spam bots, and malicious scanners.

[apache-noscript]
enabled = true
# Blocks attempts to execute non-script files as scripts.
# Example: requesting /etc/passwd or .php in non-PHP dirs.
# Logs: /var/log/apache2/error.log

[apache-overflows]
enabled = true
# Protects against buffer overflow attempts in HTTP requests.
# Logs: /var/log/apache2/error.log
# Detects very long suspicious requests.

[apache-nohome]
enabled = true
# Blocks requests to /~user directories that don’t exist.
# Logs: /var/log/apache2/error.log
# Attackers often probe these for old shells or misconfigs.

[mysqld-auth]
enabled = false
# Protects MySQL against brute force login attempts.
# Logs: /var/log/mysql/error.log (on Debian/Ubuntu)
# Enable if exposing MySQL externally (not recommended).
# Safer to firewall off MySQL from the internet entirely.

# Alternate example (redundant with above):
#[mysqld-auth]
#enabled = true
#logpath = /var/log/mysql/error.log
