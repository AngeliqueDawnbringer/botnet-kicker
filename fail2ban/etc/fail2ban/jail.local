[DEFAULT]
# Add ips here to ignore and safeguard so you dont lock yourself out
ignoreip = 127.0.0.1/8 ::1 88.88.88.88
# If you want to use my custom ipset tool, which is much faster on heavy traffic machines
#banaction = ipset-iptables
#banaction_allports = ipset-iptables

[apache-signup-abuse]
enabled = true
port    = http,https
filter  = apache-signup-abuse
logpath = /var/log/apache2/*access.log
maxretry = 5
findtime = 60
bantime  = 86400

[scraper-anthropic-abuse]
enabled   = true
port      = http,https
filter    = scraper-anthropic-abuse
logpath   = /var/log/apache2/*access.log
            /var/log/nginx/*access.log
maxretry  = 3
findtime  = 600
bantime   = 3600

[scraper-anthropic-any]
enabled   = false
port      = http,https
filter    = anthropic-any
logpath   = /var/log/apache2/access.log
           /var/log/nginx/access.log
# Ban immediately on first sighting, tune as you prefer:
maxretry  = 1
findtime  = 600
bantime   = 3600

# /etc/fail2ban/jail.d/web-detector.local
[web-detector]
# My custom machine learning model outputting files to jsonl
enabled = false
filter = web-detector
logpath = /var/log/web_suspects.jsonl
# The following line can be adapted based on frequency
#backend = polling
bantime = 5h
findtime = 15m
# If IP is flagged as an anomaly twice...
maxretry = 2 
action    = ipset-iptables


# ===========================================================
# Debian/Ubuntu LAMP Defaults
# -----------------------------------------------------------
# This file only enables common LAMP-related jails.
# Configuration (filters, ports, log paths) stays in jail.conf,
# so you still benefit from package updates.
#
# Usage:
#   sudo systemctl reload fail2ban
#   sudo fail2ban-client status
# ===========================================================

[sshd]
enabled = true
# Protects SSH login attempts.
# Logs: /var/log/auth.log
# Blocks brute force password guessing and repeated failed logins.

[apache-auth]
enabled = true
# Protects Apache authentication areas (HTTP Basic/Digest Auth).
# Logs: /var/log/apache2/error.log
# Bans IPs after repeated failed logins to protected directories.

[apache-badbots]
enabled = true
# Blocks known bad/crawler user-agents (from badbots filter list).
# Logs: /var/log/apache2/access.log
# Catches aggressive scrapers, spam bots, and malicious scanners.

[apache-noscript]
enabled = true
# Blocks requests trying to access non-script files as if they were scripts.
# Example: accessing /etc/passwd or .php files in non-PHP directories.
# Logs: /var/log/apache2/error.log

[apache-overflows]
enabled = true
# Protects against buffer overflow attempts in HTTP requests.
# Logs: /var/log/apache2/error.log
# Catches suspiciously long requests, common in exploit attempts.

[apache-nohome]
enabled = true
# Blocks requests to /~user directories when they donâ€™t exist.
# Logs: /var/log/apache2/error.log
# Attackers probe these for weak setups and old PHP shells.

[mysqld-auth]
enabled = false
# Protects MySQL against brute force login attempts.
# Logs: /var/log/mysql/error.log (on Debian/Ubuntu)
# Bans IPs with repeated failed authentication.

#[mysqld-auth]
#enabled = true
#logpath = /var/log/mysql/error.log
# Protects MySQL against brute force login attempts.
# Logs: /var/log/mysql/error.log (on Debian/Ubuntu)
# Bans IPs with repeated failed authentication
